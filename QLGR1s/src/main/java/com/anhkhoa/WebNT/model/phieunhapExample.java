package com.anhkhoa.WebNT.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class phieunhapExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public phieunhapExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSophieunhapIsNull() {
            addCriterion("SoPhieuNhap is null");
            return (Criteria) this;
        }

        public Criteria andSophieunhapIsNotNull() {
            addCriterion("SoPhieuNhap is not null");
            return (Criteria) this;
        }

        public Criteria andSophieunhapEqualTo(Integer value) {
            addCriterion("SoPhieuNhap =", value, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapNotEqualTo(Integer value) {
            addCriterion("SoPhieuNhap <>", value, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapGreaterThan(Integer value) {
            addCriterion("SoPhieuNhap >", value, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapGreaterThanOrEqualTo(Integer value) {
            addCriterion("SoPhieuNhap >=", value, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapLessThan(Integer value) {
            addCriterion("SoPhieuNhap <", value, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapLessThanOrEqualTo(Integer value) {
            addCriterion("SoPhieuNhap <=", value, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapIn(List<Integer> values) {
            addCriterion("SoPhieuNhap in", values, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapNotIn(List<Integer> values) {
            addCriterion("SoPhieuNhap not in", values, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapBetween(Integer value1, Integer value2) {
            addCriterion("SoPhieuNhap between", value1, value2, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andSophieunhapNotBetween(Integer value1, Integer value2) {
            addCriterion("SoPhieuNhap not between", value1, value2, "sophieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapIsNull() {
            addCriterion("NgayPhieuNhap is null");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapIsNotNull() {
            addCriterion("NgayPhieuNhap is not null");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapEqualTo(Date value) {
            addCriterionForJDBCDate("NgayPhieuNhap =", value, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapNotEqualTo(Date value) {
            addCriterionForJDBCDate("NgayPhieuNhap <>", value, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapGreaterThan(Date value) {
            addCriterionForJDBCDate("NgayPhieuNhap >", value, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NgayPhieuNhap >=", value, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapLessThan(Date value) {
            addCriterionForJDBCDate("NgayPhieuNhap <", value, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NgayPhieuNhap <=", value, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapIn(List<Date> values) {
            addCriterionForJDBCDate("NgayPhieuNhap in", values, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapNotIn(List<Date> values) {
            addCriterionForJDBCDate("NgayPhieuNhap not in", values, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NgayPhieuNhap between", value1, value2, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andNgayphieunhapNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NgayPhieuNhap not between", value1, value2, "ngayphieunhap");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongIsNull() {
            addCriterion("MaPhanXuong is null");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongIsNotNull() {
            addCriterion("MaPhanXuong is not null");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongEqualTo(Integer value) {
            addCriterion("MaPhanXuong =", value, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongNotEqualTo(Integer value) {
            addCriterion("MaPhanXuong <>", value, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongGreaterThan(Integer value) {
            addCriterion("MaPhanXuong >", value, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongGreaterThanOrEqualTo(Integer value) {
            addCriterion("MaPhanXuong >=", value, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongLessThan(Integer value) {
            addCriterion("MaPhanXuong <", value, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongLessThanOrEqualTo(Integer value) {
            addCriterion("MaPhanXuong <=", value, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongIn(List<Integer> values) {
            addCriterion("MaPhanXuong in", values, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongNotIn(List<Integer> values) {
            addCriterion("MaPhanXuong not in", values, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongBetween(Integer value1, Integer value2) {
            addCriterion("MaPhanXuong between", value1, value2, "maphanxuong");
            return (Criteria) this;
        }

        public Criteria andMaphanxuongNotBetween(Integer value1, Integer value2) {
            addCriterion("MaPhanXuong not between", value1, value2, "maphanxuong");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table phieunhap
     *
     * @mbg.generated do_not_delete_during_merge Thu Nov 02 15:54:30 ICT 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table phieunhap
     *
     * @mbg.generated Thu Nov 02 15:54:30 ICT 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}